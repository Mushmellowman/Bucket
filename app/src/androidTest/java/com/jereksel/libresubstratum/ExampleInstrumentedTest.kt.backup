package pl.jereksel.libresubstratum

import android.content.Context
import android.support.test.InstrumentationRegistry
import android.support.test.rule.ActivityTestRule
import android.support.test.runner.AndroidJUnit4
import com.jereksel.libresubstratum.App
import com.jereksel.libresubstratum.activities.main.MainView
import org.junit.Before
import org.junit.Rule
import org.junit.Test
import org.junit.runner.RunWith
import rx.Scheduler
import rx.android.plugins.RxAndroidPlugins
import rx.android.plugins.RxAndroidSchedulersHook
import rx.plugins.RxJavaHooks
import rx.schedulers.Schedulers

@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest() {
    @Rule public final ActivityTestRule<MainView> main = new ActivityTestRule<>(MainView.class, false, false);

    @Before
    public void setup() {
        RxJavaHooks.clear();
        RxJavaHooks.setOnIOScheduler({ Schedulers.immediate() })
        // https://github.com/groovy/groovy-android-gradle-plugin/issues/72
/*        def hook = [
                "getMainThreadScheduler": Schedulers.immediate(),
        ] as RxAndroidSchedulersHook*/

        def hook = new RxAndroidSchedulersHook() {
            @Override
            Scheduler getMainThreadScheduler() {
                Schedulers.immediate();
            }
        }

        RxAndroidPlugins.instance.reset()
        RxAndroidPlugins.instance.registerSchedulersHook(hook)

        App app = targetContext.getApplicationContext()
        MockAppComponent component = App.getAppComponent(app)
    }

    @Test
    public void useAppContext() throws Exception {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.targetContext

        assertEquals("com.jereksel.libresubstratum", appContext.packageName);
    }
}
